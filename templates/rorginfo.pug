include /mixins.pug
section
  table.eep_info
    tr
      td rorg
      td=parseInt(contents.rorg_number).toString(16).padStart(2,"0")
      td=contents.rorg_title
    tr 
      td func
      td=parseInt(contents.func_number).toString(16).padStart(2,"0")
      td=contents.func_title
    tr 
      td type
      td=parseInt(contents.number).toString(16).padStart(2,"0")
      td=contents.title
  if contents.submitter.length>0
    .submitter submitted by 
      each sbmtr,index in contents.submitter
        | #{index>0 ? " | ":""} 
        a(href=submitter[sbmtr].url)=submitter[sbmtr].name
section
  .description!=contents.description
if contents.ref
  .card
    | see
    a.ref(href="/eep/"+contents.ref.rorg+"-"+contents.ref.func+"-"+contents.ref.type+".html") #{contents.ref.rorg}-#{contents.ref.func}-#{contents.ref.type}
if contents.case
  each item,index in contents.case
    .card
      +condition(item)
      div(id="case_"+index+"telegram")
      table.data_table
        - if(!Array.isArray(item.datafield)) item.datafield=[item.datafield]
        - item.datafield.sort((a,b)=>a.bitoffs-b.bitoffs)
        - var size = 1
        - if(parseInt(contents.rorg_number)==0xa5) size=4 
        - var last = item.datafield[item.datafield.length-1]
        - if(parseInt(contents.rorg_number)==0xd2) size=(last.bitoffs*1+last.bitsize*1)/8
        tr
          th offset
          th size
          th Bit mask
        each datafield in item.datafield
          - var addcls= (datafield.reserved==undefined)?"":"reserved"
          tr(class=addcls)
            td(colspan=3)
              if (typeof datafield.data) == "string"
                | #{datafield.data}
              else
                | #{datafield.reserved==undefined?"&nbsp;":"unused"}
          tr(class=addcls)
            td=datafield.bitoffs
            td=datafield.bitsize
            td
              +bitMask(datafield,size)
          tr(class=addcls)
            td(colspan=3) 
              if datafield.enum && datafield.enum.item
                h3 Enum
                table.enum_table
                  - if(!datafield.enum.hasOwnProperty("item")) datafield.enum.item=[]
                  - if(datafield.enum.item.constructor!=Array) datafield.enum.item=[datafield.enum.item]
                  each item in datafield.enum.item
                    - if(item.hasOwnProperty("description") && item.description.hasOwnProperty("img")) item.description=item.description.img.$t
                    if item.value
                      tr
                        td #{item.value}
                        td
                          !=item.description
                    if item.min
                      tr
                        td #{item.min} - #{item.max}
                        td
                          !=item.description
                          
              if datafield.range
                table
                  tr
                    td Range
                    td #{datafield.range.min}
                    td #{datafield.range.max}
                  if datafield.scale
                    tr
                      td Scale
                      td #{datafield.scale.min}
                      td #{datafield.scale.max}
                  else
                    tr
                      td(colspan=3) Scale = Range
.card.raw
  pre
    !=JSON.stringify(contents,null,2)
